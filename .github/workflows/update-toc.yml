name: "Version Bump, TOC Update, Clean Branches"

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies (adjust as needed)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      # 🔍 Extract bump type from commit message
      - name: Extract Bump Type from Commit Message
        id: extract_bump_type
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"

          # Default bump type
          BUMP_TYPE="hotfix"

          if [[ "$COMMIT_MSG" =~ \[bump:\ major\] ]]; then
            BUMP_TYPE="major"
          elif [[ "$COMMIT_MSG" =~ \[bump:\ minor\] ]]; then
            BUMP_TYPE="minor"
          elif [[ "$COMMIT_MSG" =~ \[bump:\ hotfix\] ]]; then
            BUMP_TYPE="hotfix"
          fi

          echo "Bump type detected: $BUMP_TYPE"
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_ENV

      # 🚀 Step 1: Determine next version
      - name: Determine next version
        id: bump_version
        run: |
          git fetch origin
          git checkout main
          git merge origin/main

          CURRENT_VERSION="$(cat .version)"
          IFS='.' read -r MAJOR MINOR HOTFIX <<< "$CURRENT_VERSION"

          case "$BUMP_TYPE" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              HOTFIX=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              HOTFIX=0
              ;;
            hotfix)
              HOTFIX=$((HOTFIX + 1))
              ;;
            *)
              echo "Invalid bump type: $BUMP_TYPE"
              exit 1
              ;;
          esac

          NEW_VERSION="${MAJOR}.${MINOR}.${HOTFIX}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "Version bumped to: $NEW_VERSION"

      # 🚀 Proceed with versioning, pushing, and cleanup as before
